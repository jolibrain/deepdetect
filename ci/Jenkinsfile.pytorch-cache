
pipeline {
  agent any
  stages {
    stage('Init') { steps {
      script {
          def common = load("ci/Jenkinsfile.common")
          common.cancelPreviousBuilds()
      }
    }}

    stage('Building pytorch') {
      steps {
        sh '''
export PATH="/usr/lib/ccache/:$PATH"

set
mkdir -p build
cd build
cmake .. -DUSE_TORCH=ON -DCUDA_ARCH="-gencode arch=compute_61,code=sm_61"
make -j24 pytorch
ccache -s
'''
      }
    }
    stage('Preparing archive') {
      steps {
        sh 'tar -cvf pytorch-${GIT_COMMIT}.tar build/pytorch'
      }
    }
  }
  post {
      success {
          archiveArtifacts(artifacts: 'pytorch-*.tar')
          cleanWs(cleanWhenAborted: true, cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenSuccess: true, cleanWhenUnstable: true, cleanupMatrixParent: true, deleteDirs: true)
          rocketSend(channel: 'build', message: 'Build succeed')
      }
      unsuccessful {
          cleanWs(cleanWhenAborted: true, cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenSuccess: true, cleanWhenUnstable: true, cleanupMatrixParent: true, deleteDirs: true)
          rocketSend(channel: 'build', message: 'Build failed')
      }
  }
}
